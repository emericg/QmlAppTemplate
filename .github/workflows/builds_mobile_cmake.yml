#-------------------------------------------------------------------------------
# Workflow configuration
#-------------------------------------------------------------------------------

name: "Mobile CI builds (cmake)"
on:
  push:
  pull_request:
  workflow_dispatch:

#-------------------------------------------------------------------------------
# Define application name & version
#-------------------------------------------------------------------------------

env:
  APP_NAME: "QmlAppTemplate"
  APP_VERSION: "0.6"
  QT_VERSION: "6.6.1"

#-------------------------------------------------------------------------------
# Workflow jobs
#-------------------------------------------------------------------------------

jobs:
  ## Android build #############################################################
  build-android:
    name: "Android CI build"
    runs-on: ubuntu-20.04
    steps:
      # Checkout the repository (and submodules)
      - name: Checkout repository (and submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Java environment (already installed in 'ubuntu-20.04')
      #- name: Install JDK environment
      #  uses: actions/setup-java@v2
      #  with:
      #    distribution: 'zulu'
      #    java-version: '11'

      # Android environment (already installed in 'ubuntu-20.04')
      #- name: Setup Android SDK
      #  uses: android-actions/setup-android@v2
      #- name: Install Android SDK / NDK / tools
      #  run: |
      #       sdkmanager "platforms;android-34"
      #       sdkmanager "ndk;25.2.9519653"
      #       sdkmanager "build-tools;34.0.0"

      # Install Qt (desktop & Android)
      - name: Install Qt (desktop)
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: '==3.1.*'
          version: ${{env.QT_VERSION}}
          modules: qt5compat

      - name: Install Qt (Android armv7)
        uses: jurplel/install-qt-action@v3
        with:
          host: 'linux'
          target: 'android'
          arch: 'android_armv7'
          aqtversion: '==3.1.*'
          version: ${{env.QT_VERSION}}
          modules: qt5compat

      - name: Install Qt (Android armv8)
        uses: jurplel/install-qt-action@v3
        with:
          host: 'linux'
          target: 'android'
          arch: 'android_arm64_v8a'
          aqtversion: '==3.1.*'
          version: ${{env.QT_VERSION}}
          modules: qt5compat

      - name: Install Qt (Android x86)
        uses: jurplel/install-qt-action@v3
        with:
          host: 'linux'
          target: 'android'
          arch: 'android_x86'
          aqtversion: '==3.1.*'
          version: ${{env.QT_VERSION}}
          modules: qt5compat

      - name: Install Qt (Android x86_64)
        uses: jurplel/install-qt-action@v3
        with:
          host: 'linux'
          target: 'android'
          arch: 'android_x86_64'
          aqtversion: '==3.1.*'
          version: ${{env.QT_VERSION}}
          modules: qt5compat

      # Install dependencies (from package manager)
      - name: Install dependencies (from package manager)
        run: |
             sudo apt-get install cmake ninja-build -y;

      # Setup env
      - name: Setup env
        run: |
             echo "QT_HOST_PATH=/home/runner/work/${{env.APP_NAME}}/Qt/${{env.QT_VERSION}}/gcc_64" >> $GITHUB_ENV
             echo "QT_TARGET_PATH=/home/runner/work/${{env.APP_NAME}}/Qt/${{env.QT_VERSION}}/android_arm64_v8a" >> $GITHUB_ENV
             cmake --version

      # Build application
      - name: Build application
        run: |
             export JAVA_HOME=$JAVA_HOME_17_X64
             cmake -B build/ -G Ninja \
               -DCMAKE_BUILD_TYPE=Release \
               -DCMAKE_SYSTEM_NAME=Android \
               -DCMAKE_SYSTEM_VERSION=23 \
               -DCMAKE_FIND_ROOT_PATH:PATH=${{env.QT_TARGET_PATH}} \
               -DCMAKE_PREFIX_PATH:PATH=${{env.QT_TARGET_PATH}} \
               -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
               -DANDROID_SDK_ROOT=$ANDROID_SDK_ROOT \
               -DANDROID_NDK_ROOT=$ANDROID_NDK_ROOT \
               -DANDROID_PLATFORM=android-23 \
               -DANDROID_ABI="arm64-v8a" \
               -DQT_HOST_PATH:PATH=${{env.QT_HOST_PATH}} \
               -DQT_ANDROID_BUILD_ALL_ABIS=ON \
               -DQT_ANDROID_ABIS="armeabi-v7a;arm64-v8a;x86;x86_64"
             cmake --build build/ --config Release

      # Package application
      - name: Package application
        run: |
             echo '---- ls build/'
             ls build/
             echo '---- ls build/android_abi_builds/'
             ls build/android_abi_builds
             echo '---- ls build/android-build/'
             ls build/android-build
             echo '---- ls build/android-build/ + ARCHS'
             ls build/android-build/libs/arm64-v8a
             ls build/android-build/libs/armeabi-v7a
             ls build/android-build/libs/x86
             ls build/android-build/libs/x86_64
             echo '---- cat deployment-settings.json'
             cat build/android-QmlAppTemplate-deployment-settings.json
             echo '---- androiddeployqt'
             $QT_HOST_PATH/bin/androiddeployqt --input build/android-QmlAppTemplate-deployment-settings.json --output android-build/ --aab --android-platform android-34 --gradle --release


  ## iOS build #################################################################
  build-ios:
    name: "iOS CI build"
    runs-on: macos-12
    steps:
      # Checkout the repository (and submodules)
      - name: Checkout repository (and submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Install Qt (desktop)
      - name: Install Qt (iOS & desktop)
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{env.QT_VERSION}}
          modules: qt5compat qtshadertools

      # Install Qt (iOS)
      - name: Install Qt (iOS & desktop)
        uses: jurplel/install-qt-action@v3
        with:
          host: 'mac'
          target: 'ios'
          version: ${{env.QT_VERSION}}
          modules: qt5compat qtshadertools

      # Install dependencies (from package manager)
      #- name: Install dependencies (from package manager)
      #  run: |
      #       brew install cmake

      # Setup env
      - name: Setup env
        run: |
             echo "QT_HOST_PATH=/Users/runner/work/${{env.APP_NAME}}/Qt/${{env.QT_VERSION}}/macos" >> $GITHUB_ENV
             echo "QT_TARGET_PATH=/Users/runner/work/${{env.APP_NAME}}/Qt/${{env.QT_VERSION}}/ios" >> $GITHUB_ENV
             cmake --version

      # Build application
      - name: Build application
        run: |
             cmake -B build/ -G Xcode \
               -DQT_HOST_PATH:PATH=${{env.QT_HOST_PATH}} \
               -DCMAKE_FIND_ROOT_PATH:PATH=${{env.QT_TARGET_PATH}} \
               -DCMAKE_PREFIX_PATH:PATH=${{env.QT_TARGET_PATH}} \
               -DCMAKE_TOOLCHAIN_FILE=assets/ios/ios.toolchain.cmake \
               -DCMAKE_SYSTEM_NAME=iOS \
               -DCMAKE_BUILD_TYPE=Release \
               -DENABLE_ARC=FALSE \
               -DPLATFORM=OS64
             cmake --build build/ --config Release
